// Automatically generated file.  Do not edit!

'use strict';
var e=Number,f,g=window.location.search.match(/[?&]level=([^&]+)/);f=g?decodeURIComponent(g[1].replace(/\+/g,"%20")):"NaN";e(f);if(!h){var h,k="";"undefined"!==typeof navigator&&navigator&&"string"==typeof navigator.userAgent&&(k=navigator.userAgent);var l=0==k.indexOf("Opera");h={l:{g:"ScriptEngine"in window},i:l,h:!l&&-1!=k.indexOf("MSIE"),j:!l&&-1!=k.indexOf("WebKit")}}if(!m)var m={};if(!n)var n={};if(!p)var p={};if(!q)var q={};if(!r)var r={};if(!t)var t={};
function u(b){b=b.currentTarget;var a=document.getElementById(b.id+"-content"),c="zippy-content-expanded"==a.className;b.className="zippy-header-"+(c?"collapsed":"expanded");a.className="zippy-content-"+(c?"collapsed":"expanded");a.style.maxHeight=c?0:a.scrollHeight+"px"}
window.addEventListener("load", function () {var b = window.location.search.match(/[?&]mode=([^&]+)/); b = b ? Number(b[1]) : Infinity; var a = b % 2 ? "blocks" : "js"; document.body.innerHTML ='<h1>ポンドのドキュメント</h1><h2 id="pond">ポンド</h2><div id="pond-content"><h3>角度</h3><p>コンパスは、真東（右）が0度、90が北、180が西、270が南になるように配置されています。角度は予想どおりに折り返されます。-90は南、450は北です。</p><p><img src="docs/compass.png" height="145" width="150" style="padding: 0 2em;"></p><h3>大砲</h3>'+("blocks"==
a?'<p><svg height="41" width="250"><g class="blocklyDraggable"><path class="blocklyPathDark" transform="translate(1,1)" fill="#7a4984" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 40 H 222.36071014404297 v 36 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 125.01641845703125,5 h -36.020530700683594 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 36.020530700683594 z M 193.4027557373047,5 h -38.31193542480469 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 38.31193542480469 z"></path><path class="blocklyPath" fill="#995ba5" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 40 H 222.36071014404297 v 36 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 125.01641845703125,5 h -36.020530700683594 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 36.020530700683594 z M 193.4027557373047,5 h -38.31193542480469 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 38.31193542480469 z"></path><path class="blocklyPathLight" stroke="#b88cc0" d="m 0.5,7.5 A 7.5,7.5 0 0,1 8,0.5 H 15 l 6,4 3,0 6,-4 H 39.5 M 39.5,0.5 H 221.86071014404297 M 2.6966991411008934,33.30330085889911 A 7.5,7.5 0 0,1 0.5,28 V 8 M 125.51641845703125,5.5 v 27 h -36.020530700683594 M 83.89588775634766,24.3 l 3.68,-2.1 M 193.9027557373047,5.5 v 27 h -38.31193542480469 M 149.9908203125,24.3 l 3.68,-2.1"></path><text class="blocklyText" y="12.5" transform="translate(10,10)">cannon</text><text class="blocklyText" y="12.5" transform="translate(68.11233520507812,10)">(</text><text class="blocklyText" y="12.5" transform="translate(135.01641845703125,10)">,</text><text class="blocklyText" y="12.5" transform="translate(203.4027557373047,10)">);</text><g class="blocklyDraggable" transform="translate(89.99588775634766,6)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 34.020530700683594 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 34.020530700683594 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 33.520530700683594 M 33.520530700683594,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: text;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="24.020530700683594"></rect><text class="blocklyText" y="12.5">0<tspan>\u00b0</tspan></text></g></g><g class="blocklyDraggable" transform="translate(156.0908203125,6)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 36.31193542480469 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 36.31193542480469 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 35.81193542480469 M 35.81193542480469,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: text;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="26.311935424804688"></rect><text class="blocklyText" y="12.5">70</text></g></g></g></svg></p>':"js" == a ? '<pre class="pondSpec spec">cannon(<i>angle</i>, <i>range</i>)</pre>' : "") +"<p>この<code>cannon()</code>関数は、指定された角度と範囲に向けて砲弾を発射します。角度はアヒルの方向とは無関係です。範囲は0〜70メートルで、より広い範囲は70に切り捨てられます</p><p>大砲は発砲後、リロードに約1秒かかります。<code>cannon()</code>がこの間に呼び出された場合、何も起こりません。"+("js"==a?" <code>cannon()</code>は、砲弾が発射された場合は<code>true</code>を返し、砲弾が再ロードされている場合は<code>false</code>を返します。":"") + "</p>" + (5 <= b ?"<h3>スキャン</h3>"+("blocks"==a?'<p><svg height="37" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#7a4984" d="m 0,0 H 20 H 132.76456451416016 v 36 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z M 107.88101196289062,5 h -36.020530700683594 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 36.020530700683594 z"></path><path class="blocklyPath" fill="#995ba5" d="m 0,0 H 20 H 132.76456451416016 v 36 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z M 107.88101196289062,5 h -36.020530700683594 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 36.020530700683594 z"></path><path class="blocklyPathLight" stroke="#b88cc0" d="m 0.5,0.5 H 19.5 M 19.5,0.5 H 132.26456451416016 M 0.5,35.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1 M 108.38101196289062,5.5 v 27 h -36.020530700683594 M 66.76048126220704,24.3 l 3.68,-2.1"></path><text class="blocklyText" y="12.5" transform="translate(10,10)">scan</text><text class="blocklyText" y="12.5" transform="translate(50.9769287109375,10)">(</text><text class="blocklyText" y="12.5" transform="translate(117.88101196289062,10)">)</text><g class="blocklyDraggable" transform="translate(72.86048126220703,6)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 34.020530700683594 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 34.020530700683594 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 33.520530700683594 M 33.520530700683594,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: text;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="24.020530700683594"></rect><text class="blocklyText" y="12.5">0<tspan>\u00b0</tspan></text></g></g></g></svg></p>':"js" == a ? '<pre class="pondSpec spec">scan(<i>angle</i>)\nscan(<i>angle</i>, <i>width</i>)</pre>' : "") +"<p>この<code>scan()</code>機能はアヒルのレーダーを作動させます。この関数は、指定された方向で最も近い敵に範囲を返します。角度はアヒルの方向とは無関係です。沈んだ相手は検出されません。その方向に対戦相手がいない場合<code>Infinity</code>が返されます。</p>"+("js"==a?"<p><code>scan()</code>の2番目（オプション）のパラメーターは、走査ビームの幅を指定します。これは1度から20度まで可能です。上級者は、高速スキャンのために20の幅でスキャンを開始し、幅を徐々に狭めてより正確にすることができます。指定しない場合、幅は5です。このパラメーターはJavaScriptでのみ使用でき、ブロックでは使用できません。</p>":
""):"")+(7<=b?"<h3>泳ぐ</h3>"+("blocks"==a?'<p><svg height="41" width="250"><g class="blocklyDraggable"><path class="blocklyPathDark" transform="translate(1,1)" fill="#7a4984" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 40 H 139.2592544555664 v 36 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 110.30130004882812,5 h -36.020530700683594 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 36.020530700683594 z"></path><path class="blocklyPath" fill="#995ba5" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 40 H 139.2592544555664 v 36 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 110.30130004882812,5 h -36.020530700683594 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 36.020530700683594 z"></path><path class="blocklyPathLight" stroke="#b88cc0" d="m 0.5,7.5 A 7.5,7.5 0 0,1 8,0.5 H 15 l 6,4 3,0 6,-4 H 39.5 M 39.5,0.5 H 138.7592544555664 M 2.6966991411008934,33.30330085889911 A 7.5,7.5 0 0,1 0.5,28 V 8 M 110.80130004882812,5.5 v 27 h -36.020530700683594 M 69.18076934814454,24.3 l 3.68,-2.1"></path><text class="blocklyText" y="12.5" transform="translate(10,10)">swim</text><text class="blocklyText" y="12.5" transform="translate(53.397216796875,10)">(</text><text class="blocklyText" y="12.5" transform="translate(120.30130004882812,10)">);</text><g class="blocklyDraggable" transform="translate(75.28076934814453,6)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 34.020530700683594 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 34.020530700683594 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 33.520530700683594 M 33.520530700683594,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: text;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="24.020530700683594"></rect><text class="blocklyText" y="12.5">0<tspan>\u00b0</tspan></text></g></g></g></svg></p>':
"js"==a?'<pre class="pondSpec spec">swim(<i>angle</i>)\nswim(<i>angle</i>, <i>スピード</i>)</pre>':"")+"<p><code>swim()</code>関数は、アヒルの移動を開始します。アヒルは無期限に指定された方向に動き続けます。</p>"+("js"==a?"<p>The second (optional) parameter of <code>swim()</code> specifies the speed. This can be from 0 (stopped) to 100 (fast).  Direction of movement may only be changed if the speed is 50 or less.  If not specified, the speed is 50. This parameter is only available with JavaScript, not with blocks.</p>":
"")+"<p>ポンドの端に衝突すると、アヒルが損傷します。他のアヒルに衝突すると、両方のアヒルが損傷します。ダメージ量はスピードに比例します。</p>":"")+(9<=b?"<h3>ストップ</h3>"+("blocks"==a?'<p><svg height="31" width="250"><g class="blocklyDraggable"><path class="blocklyPathDark" transform="translate(1,1)" fill="#7a4984" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 81.56034088134766 v 24 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z"></path><path class="blocklyPath" fill="#995ba5" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 81.56034088134766 v 24 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z"></path><path class="blocklyPathLight" stroke="#b88cc0" d="m 0.5,7.5 A 7.5,7.5 0 0,1 8,0.5 H 15 l 6,4 3,0 6,-4 H 81.06034088134766 M 81.06034088134766,0.5 M 2.6966991411008934,21.303300858899107 A 7.5,7.5 0 0,1 0.5,16 V 8"></path><text class="blocklyText" y="12.5" transform="translate(10,5)">stop</text><text class="blocklyText" y="12.5" transform="translate(47.718833923339844,5)">(</text><text class="blocklyText" y="12.5" transform="translate(62.602386474609375,5)">);</text></g></svg></p>':
"js"==a?'<pre class="pondSpec spec">stop()</pre>':"")+"<p><code>stop()</code>機能はアヒルの動きを止めます。アヒルが完全に停止する前に、減速するのに少し時間がかかります。"+("js"==a?"This is the same as calling <code>swim()</code> with a speed of zero.":"")+"</p>":"")+(9<=b?"<h3>ロケーション</h3>"+("blocks"==a?'<p><svg height="26" width="90"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#7a4984" d="m 0,0 H 79.93487548828125 v 24 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#995ba5" d="m 0,0 H 79.93487548828125 v 24 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#b88cc0" d="m 0.5,0.5 H 79.43487548828125 M 79.43487548828125,0.5 M 0.5,23.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><text class="blocklyText" y="12.5" transform="translate(10,5)">getX</text><text class="blocklyText" y="12.5" transform="translate(50.16777038574219,5)">(</text><text class="blocklyText" y="12.5" transform="translate(65.05132293701172,5)">)</text></g></svg> &nbsp; <svg height="26" width="90"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#7a4984" d="m 0,0 H 79.93487548828125 v 24 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#995ba5" d="m 0,0 H 79.93487548828125 v 24 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#b88cc0" d="m 0.5,0.5 H 79.43487548828125 M 79.43487548828125,0.5 M 0.5,23.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><text class="blocklyText" y="12.5" transform="translate(10,5)">getY</text><text class="blocklyText" y="12.5" transform="translate(50.16777038574219,5)">(</text><text class="blocklyText" y="12.5" transform="translate(65.05132293701172,5)">)</text></g></svg></p>':"js" == a ? '<pre class="pondSpec spec">getX()\ngetY()</pre>' : "") +'<p><code>getX()</code>・<code>getY()</code>機能はアヒルの水平および垂直位置を返します。値は0から100の間で、左下隅から始まります。</p><p><img src="docs/map.png" height="190" width="244" style="padding: 0 2em;"></p>':"")+(11<=b?"<h3>スピード</h3>"+("blocks"==a?'<p><svg height="26" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#7a4984" d="m 0,0 H 89.72347259521484 v 24 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#995ba5" d="m 0,0 H 89.72347259521484 v 24 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#b88cc0" d="m 0.5,0.5 H 89.22347259521484 M 89.22347259521484,0.5 M 0.5,23.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><text class="blocklyText" y="12.5" transform="translate(10,5)">speed</text><text class="blocklyText" y="12.5" transform="translate(59.95636749267578,5)">(</text><text class="blocklyText" y="12.5" transform="translate(74.83992004394531,5)">)</text></g></svg></p>':
"js"==a?'<pre class="pondSpec spec">speed()</pre>':"")+"<p>このspeed()関数は、アヒルの現在の速度を返します。値は0（停止）から100（高速）の間です。この関数は、衝突を検出するために使用できます（これにより、アヒルが即座に停止します）。</p>":"")+(11<=b?"<h3>健康</h3>"+("blocks"==a?'<p><svg height="26" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#7a4984" d="m 0,0 H 89.72346496582031 v 24 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#995ba5" d="m 0,0 H 89.72346496582031 v 24 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#b88cc0" d="m 0.5,0.5 H 89.22346496582031 M 89.22346496582031,0.5 M 0.5,23.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><text class="blocklyText" y="12.5" transform="translate(10,5)">健康</text><text class="blocklyText" y="12.5" transform="translate(59.95635986328125,5)">(</text><text class="blocklyText" y="12.5" transform="translate(74.83991241455078,5)">)</text></g></svg></p>':"js" == a ? '<pre class="pondSpec spec">health()</pre>' : "") +"<p>このhealth()関数は、アヒルの現在のヘルスレベルを返します。値は0（sunk:沈没）から100（perfect:完全）の間です。上級プレーヤーは、ヘルスを変数に保存し、定期的にヘルスが低下しているかどうかを確認することで、アヒルが攻撃を受けていることを示すことができます。</p><p>健康を修復する方法はありません。</p>":"")+"</div>"+(3<=b?'\x3c!-- ---------------------------------------------------------------------- --\x3e<h2 id="logic">論理</h2><div id="logic-content">'+
(9<=b?"<h3>If</h3>"+("blocks"==a?'<p><svg height="90" width="250"><g class="blocklyDraggable"><path class="blocklyPathDark" transform="translate(1,1)" fill="#496684" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 50 H 117.64627075195312 v 35 H 50 l -6,4 -3,0 -6,-4 h -7 a 8,8 0 0,0 -8,8 v 9 a 8,8 0 0,0 8,8 H 50 H 50 v 25 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 83.79044342041016,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z"></path><path class="blocklyPath" fill="#5b80a5" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 50 H 117.64627075195312 v 35 H 50 l -6,4 -3,0 -6,-4 h -7 a 8,8 0 0,0 -8,8 v 9 a 8,8 0 0,0 8,8 H 50 H 50 v 25 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 83.79044342041016,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z"></path><path class="blocklyPathLight" stroke="#8ca6c0" d="m 0.5,7.5 A 7.5,7.5 0 0,1 8,0.5 H 15 l 6,4 3,0 6,-4 H 49.5 M 49.5,0.5 H 117.14627075195312 M 49.5,35.5 M 21.989592359914347,58.01040764008565 a 8.5,8.5 0 0,0 6.0104076400856545,2.4895923599143455 H 49.5 M 49.5,60.5 H 49.5 M 2.6966991411008934,82.3033008588991 A 7.5,7.5 0 0,1 0.5,77 V 8 M 84.29044342041016,5.5 v 26 h -14.5 M 64.19044342041016,24.3 l 3.68,-2.1"></path><g class="blocklyIconGroup" display="block" transform="translate(10,5)"><rect class="blocklyIconShape" rx="4" ry="4" height="16" width="16"></rect><path class="blocklyIconSymbol" d="m4.203,7.296 0,1.368 -0.92,0.677 -0.11,0.41 0.9,1.559 0.41,0.11 1.043,-0.457 1.187,0.683 0.127,1.134 0.3,0.3 1.8,0 0.3,-0.299 0.127,-1.138 1.185,-0.682 1.046,0.458 0.409,-0.11 0.9,-1.559 -0.11,-0.41 -0.92,-0.677 0,-1.366 0.92,-0.677 0.11,-0.41 -0.9,-1.559 -0.409,-0.109 -1.046,0.458 -1.185,-0.682 -0.127,-1.138 -0.3,-0.299 -1.8,0 -0.3,0.3 -0.126,1.135 -1.187,0.682 -1.043,-0.457 -0.41,0.11 -0.899,1.559 0.108,0.409z"></path><circle class="blocklyIconShape" r="2.7" cx="8" cy="8"></circle></g><text class="blocklyText" y="12.5" transform="translate(37,10)">if&#160;(</text><text class="blocklyText" y="12.5" transform="translate(93.79044342041016,10)">)&#160;{</text><text class="blocklyText" y="12.5" transform="translate(10,65)">}</text></g></svg></p>':
"js"==a?'<pre class="logicSpec spec">if (<i>condition</i>) {\n  <i>statements</i>\n}\n\n\nif (<i>condition</i>) {\n  <i>statements</i>\n} else if (<i>condition</i>) {\n  <i>statements</i>\n}\n\n\nif (<i>condition</i>) {\n  <i>statements</i>\n} else {\n  <i>statements</i>\n}</pre>':"")+"<p>条件が<code>true</code>の場合、含まれているステートメントを実行します。ifの後には、他の任意の数のelse if条件が続き、最後elseに、前の条件のいずれもtrueでなかった場合に実行されるオプションの条件が続きます。</p>":
"")+(9<=b?"<h3>等しい</h3>"+("blocks"==a?'<p><svg height="36" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#496684" d="m 0,0 H 20 H 111.56876373291016 v 35 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z M 30.5,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z M 101.56876373291016,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z"></path><path class="blocklyPath" fill="#5b80a5" d="m 0,0 H 20 H 111.56876373291016 v 35 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z M 30.5,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z M 101.56876373291016,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z"></path><path class="blocklyPathLight" stroke="#8ca6c0" d="m 0.5,0.5 H 19.5 M 19.5,0.5 H 111.06876373291016 M 0.5,34.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1 M 31,5.5 v 26 h -14.5 M 10.9,24.3 l 3.68,-2.1 M 102.06876373291016,5.5 v 26 h -14.5 M 81.96876373291016,24.3 l 3.68,-2.1"></path><g class="blocklyEditableText" transform="translate(40.5,10)" style="cursor: default;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="40.568763732910156"></rect><text class="blocklyText" y="12.5" text-anchor="start" x="0">==<tspan style="fill: rgb(91, 128, 165);"> \u25be</tspan></text></g></g></svg></p>':
"js"==a?'<pre class="logicSpec spec">==    !=    &lt;    &lt;=    &gt;    &gt;=</pre>':"")+"<p>これらの式は、2つの数値を比較してtrue・falseを返します。使用可能な6つの等価演算子は次のとおりです。</p><table><tr><th>演算子</td><th>例</td><th>戻り値</td></tr><tr><td>等しい</td><td><code>5 == 10</code></td><td><code>false</code></td></tr><tr><td>等しくない</td><td><code>5 != 10</code></td><td><code>true</code></td></tr><tr><td>未満</td><td><code>5 &lt; 10</code></td><td><code>true</code></td></tr><tr><td>以下</td><td><code>5 &lt;= 10</code></td><td><code>true</code></td></tr><tr><td>より大きい</td><td><code>5 &gt; 10</code></td><td><code>false</code></td></tr><tr><td>以上</td><td><code>5 &gt;= 10</code></td><td><code>false</code></td></tr></table><p>!=において、比較される数値が分数である場合の使用は危険な場合があります。50まで泳いで停止するように設計された次のコードを考えます。</p><pre>while (getY() <b>!=</b> 50) {\n  swim(90"+
("js"==a?", 50":"")+");\n}\nstop();</pre><p>上記のコードはgetY()、ある実行では49.4、次の実行では50.6になる可能性があるため失敗します。値がちょうど50で見られなかったので、ループは永遠に続きます。以下はより良いコードです：</p><pre>while (getY() <b>&lt;</b> 50) {\n  swim(90"+("js"==a?", 50":"")+");\n}\nstop();</pre>":"")+(11<=b?"<h3>AndとOr</h3>"+("blocks"==a?'<p><svg height="36" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#496684" d="m 0,0 H 20 H 114.00337982177734 v 35 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z M 30.5,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z M 104.00337982177734,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z"></path><path class="blocklyPath" fill="#5b80a5" d="m 0,0 H 20 H 114.00337982177734 v 35 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z M 30.5,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z M 104.00337982177734,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z"></path><path class="blocklyPathLight" stroke="#8ca6c0" d="m 0.5,0.5 H 19.5 M 19.5,0.5 H 113.50337982177734 M 0.5,34.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1 M 31,5.5 v 26 h -14.5 M 10.9,24.3 l 3.68,-2.1 M 104.50337982177734,5.5 v 26 h -14.5 M 84.40337982177735,24.3 l 3.68,-2.1"></path><g class="blocklyEditableText" transform="translate(40.5,10)" style="cursor: default;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="43.003379821777344"></rect><text class="blocklyText" y="12.5" text-anchor="start" x="0">&amp;&amp;<tspan style="fill: rgb(91, 128, 165);"> \u25be</tspan></text></g></g></svg></p>':
"js"==a?'<pre class="logicSpec spec">&&    ||</pre>':"")+"<p>「<code>And</code>」は<code>&&</code>演算子によって表されます。両方とも<code>true</code>の場合にのみtrueが返されます。例えば、次のコードは、範囲が5より大きく70より小さい場合にのみ大砲を発射します</p><pre>if (range &gt; 5 <b>&amp;&amp;</b> range &lt; 70) {\n  cannon(angle, range);\n}</pre><p>「Or」は<code>||</code>演算子で表されます。どちらかがtrueの場合にtrueを返します。例えば、アヒルが壁に近い場合、このコードは停止します。</p><pre>if (getX() &lt; 10 <b>||</b> getX() &gt; 90 <b>||</b>\n    getY() &lt; 10 <b>||</b> getY() &gt; 90) {\n  stop();\n}</pre>":
"")+"<h3>ブーリアン</h3>"+("blocks"==a?'<p><svg height="26" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#496684" d="m 0,0 H 58.71040344238281 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b80a5" d="m 0,0 H 58.71040344238281 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8ca6c0" d="m 0.5,0.5 H 58.21040344238281 M 58.21040344238281,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: default;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="48.71040344238281"></rect><text class="blocklyText" y="12.5" text-anchor="start" x="0">true<tspan style="fill: rgb(91, 128, 165);"> \u25be</tspan></text></g></g></svg></p>':
"js"==a?'<pre class="logicSpec spec">true    false</pre>':"")+"<p>この値<code>true</code>は主に、whileループによって使用され、永久に実行されるループを作成します。値<code>false</code>も入手可能です。</p></div>":"")+(3<=b?'\x3c!-- ---------------------------------------------------------------------- --\x3e<h2 id="loops">ループ</h2><div id="loops-content"><h3>While</h3>'+("blocks"==a?'<p><svg height="90" width="250"><g class="blocklyDraggable"><path class="blocklyPathDark" transform="translate(1,1)" fill="#498449" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 50 H 116.73247528076172 v 35 H 50 l -6,4 -3,0 -6,-4 h -7 a 8,8 0 0,0 -8,8 v 9 a 8,8 0 0,0 8,8 H 50 H 50 v 25 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 82.87664794921875,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z"></path><path class="blocklyPath" fill="#5ba55b" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 50 H 116.73247528076172 v 35 H 50 l -6,4 -3,0 -6,-4 h -7 a 8,8 0 0,0 -8,8 v 9 a 8,8 0 0,0 8,8 H 50 H 50 v 25 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 82.87664794921875,5 h -14.5 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 6 h 14.5 z"></path><path class="blocklyPathLight" stroke="#8cc08c" d="m 0.5,7.5 A 7.5,7.5 0 0,1 8,0.5 H 15 l 6,4 3,0 6,-4 H 49.5 M 49.5,0.5 H 116.23247528076172 M 49.5,35.5 M 21.989592359914347,58.01040764008565 a 8.5,8.5 0 0,0 6.0104076400856545,2.4895923599143455 H 49.5 M 49.5,60.5 H 49.5 M 2.6966991411008934,82.3033008588991 A 7.5,7.5 0 0,1 0.5,77 V 8 M 83.37664794921875,5.5 v 26 h -14.5 M 63.27664794921875,24.3 l 3.68,-2.1"></path><text class="blocklyText" y="12.5" transform="translate(10,10)">while&#160;(</text><text class="blocklyText" y="12.5" transform="translate(92.87664794921875,10)">)&#160;{</text><text class="blocklyText" y="12.5" transform="translate(10,65)">}</text></g></svg></p>':
"js"==a?'<pre class="loopsSpec spec">while (<i>condition</i>) {\n  <i>statements</i>\n}</pre>':"")+"<p>条件が真である限り、ループは囲まれたステートメントの実行を繰り返します。したがって、以下は大砲を永久に西に向けて発射します。</p><pre>while (true) {\n  cannon(180, 50);\n}</pre><p>対戦相手が射程内にいる限り、以下はキャノンを西に射撃します：</p><pre>while (scan(180"+("js"==a?", 5":"")+") &lt;= 70) {\n  cannon(180, scan(180"+("js"==a?", 5":"")+"));\n}</pre></div>":"") +'\x3c!------------------------------------------------------------------------ --\x3e<h2 id="math">数学</h2><div id="math-content"><h3>数</h3>' + ("blocks" == a ? '<p><svg height="26" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 27.655967712402344 M 27.655967712402344,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: text;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="18.155967712402344"></rect><text class="blocklyText" y="12.5">0</text></g></g></svg></p>' : "js" == a ? '<pre class="mathSpec spec">123</pre>' : "") +"<p>数値は、範囲、角度、カウンターなど、さまざまな目的で使用されます。数値は負（例：-360）、小数（例：3.14159）、または非常に大きい値（例：9007199254740992）です。<code>Infinity</code>と呼ばれる特別な数もあります。</p><p>桁区切り記号（9,000など）は使用しないでください。</p>"+(11<=b?"<h3>算術</h3>"+("blocks"==a?'<p><svg height="36" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 20 H 134.3165740966797 v 36 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z M 46.155967712402344,5 h -30.155967712402344 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 30.155967712402344 z M 124.31657409667969,5 h -30.155967712402344 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 30.155967712402344 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 20 H 134.3165740966797 v 36 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z M 46.155967712402344,5 h -30.155967712402344 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 30.155967712402344 z M 124.31657409667969,5 h -30.155967712402344 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 30.155967712402344 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 19.5 M 19.5,0.5 H 133.8165740966797 M 0.5,35.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1 M 46.655967712402344,5.5 v 27 h -30.155967712402344 M 10.9,24.3 l 3.68,-2.1 M 124.81657409667969,5.5 v 27 h -30.155967712402344 M 89.06060638427735,24.3 l 3.68,-2.1"></path><g class="blocklyEditableText" transform="translate(56.155967712402344,10)" style="cursor: default;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="32.004638671875"></rect><text class="blocklyText" y="12.5" text-anchor="start" x="0">+<tspan style="fill: rgb(91, 103, 165);"> \u25be</tspan></text></g><g class="blocklyDraggable" transform="translate(95.16060638427734,6)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 27.655967712402344 M 27.655967712402344,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: text;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="18.155967712402344"></rect><text class="blocklyText" y="12.5">2</text></g></g><g class="blocklyDraggable" transform="translate(16.999999999999943,6)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 27.655967712402344 M 27.655967712402344,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: text;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="18.155967712402344"></rect><text class="blocklyText" y="12.5">1</text></g></g></g></svg></p>':
"js"==a?'<pre class="mathSpec spec">+    -    *    /</pre>':"")+"<p>これらの演算子は2つの数値を取り、1つの数値を返します。使用可能な4つの算術演算子は次のとおりです。</p><table><tr><th>オペレータ</td><th>例</td><th>戻り値</td></tr><tr><td>プラス</td><td><code>3 + 4</code></td><td><code>7</code></td></tr><tr><td>マイナス</td><td><code>3 - 4</code></td><td><code>-1</code></td></tr><tr><td>掛ける</td><td><code>3 * 4</code></td><td><code>12</code></td></tr><tr><td>割る</td><td><code>3 / 4</code></td><td><code>0.75</code></td></tr></table>":
"")+(11<=b?"<h3>三角法</h3>"+("blocks"==a?'<p><svg height="36" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 20 H 170.4867935180664 v 36 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z M 145.60324096679688,5 h -30.155967712402344 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 30.155967712402344 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 20 H 170.4867935180664 v 36 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z M 145.60324096679688,5 h -30.155967712402344 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 30.155967712402344 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 19.5 M 19.5,0.5 H 169.9867935180664 M 0.5,35.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1 M 146.10324096679688,5.5 v 27 h -30.155967712402344 M 110.34727325439454,24.3 l 3.68,-2.1"></path><g class="blocklyEditableText" transform="translate(10,10)" style="cursor: default;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="84.563720703125"></rect><text class="blocklyText" y="12.5" text-anchor="start" x="0">Math.sqrt<tspan style="fill: rgb(91, 103, 165);"> \u25be</tspan></text></g><text class="blocklyText" y="12.5" transform="translate(94.563720703125,10)">(</text><text class="blocklyText" y="12.5" transform="translate(155.60324096679688,10)">)</text><g class="blocklyDraggable" transform="translate(116.44727325439453,6)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 27.655967712402344 M 27.655967712402344,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: text;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="18.155967712402344"></rect><text class="blocklyText" y="12.5">9</text></g></g></g></svg></p>':
"js"==a?'<pre class="mathSpec spec">Math.<i>operation</i>(<i>number</i>)</pre>':"")+"<p>これらの関数は数値を取り、数値を返します。使用可能な8つの関数は次のとおりです。:</p><table><tr><th>関数</td><th>例</td><th>戻り値</td></tr><tr><td>平方根</td><td><code>Math.sqrt(25)</code></td><td><code>5</code></td></tr><tr><td>絶対値</td><td><code>Math.abs(-25)</code></td><td><code>25</code></td></tr><tr><td>サイン</td><td><code>Math.sin_deg(30)</code></td><td><code>0.5</code></td></tr><tr><td>コサイン</td><td><code>Math.cos_deg(30)</code></td><td><code>0.866</code></td></tr><tr><td>タンジェント</td><td><code>Math.tan_deg(30)</code></td><td><code>0.577</code></td></tr><tr><td>アークサイン</td><td><code>Math.asin_deg(0.5)</code></td><td><code>30</code></td></tr><tr><td>アークコサイン</td><td><code>Math.acos_deg(0.866)</code></td><td><code>30.003</code></td></tr><tr><td>アークタンジェント</td><td><code>Math.atan_deg(0.577)</code></td><td><code>29.985</code></td></tr></table><p>これらの三角関数はポンドゲーム専用であり、すべて度を使用することに注意してください。標準のJavaScript関数はラジアンを使用します。</p>":
"")+(11<=b?"<h3>乱数</h3>"+("blocks"==a?'<p><svg height="26" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 132.46497344970703 v 24 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 132.46497344970703 v 24 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 131.96497344970703 M 131.96497344970703,0.5 M 0.5,23.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><text class="blocklyText" y="12.5" transform="translate(10,5)">Math.random&#160;&#160;(&#160;&#160;)</text></g></svg></p>':
"js"==a?'<pre class="mathSpec spec">Math.random()</pre>':"")+"<p>この関数は、0.0以上1.0未満のランダムな小数を返します。より広い範囲の乱数を取得するには、最大値を掛けます。ランダムな角度を取得する例を次に示します。</p><pre>var angle = Math.random() * 360;</pre>":"")+"</div>"+(11<=b?'\x3c!-- ---------------------------------------------------------------------- --\x3e<h2 id="variables">変数</h2><div id="variables-content"><h3>割り当て</h3>'+("blocks"==a?'<p><svg height="40" width="250"><g class="blocklyDraggable"><path class="blocklyPathDark" transform="translate(1,1)" fill="#844966" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 40 H 179.29097747802734 v 36 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 155.2165756225586,5 h -30.155967712402344 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 30.155967712402344 z"></path><path class="blocklyPath" fill="#a55b80" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 40 H 179.29097747802734 v 36 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 155.2165756225586,5 h -30.155967712402344 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 30.155967712402344 z"></path><path class="blocklyPathLight" stroke="#c08ca6" d="m 0.5,7.5 A 7.5,7.5 0 0,1 8,0.5 H 15 l 6,4 3,0 6,-4 H 39.5 M 39.5,0.5 H 178.79097747802734 M 2.6966991411008934,33.30330085889911 A 7.5,7.5 0 0,1 0.5,28 V 8 M 155.7165756225586,5.5 v 27 h -30.155967712402344 M 119.96060791015626,24.3 l 3.68,-2.1"></path><text class="blocklyText" y="12.5" transform="translate(10,10)">var</text><g class="blocklyEditableText" transform="translate(40.37201690673828,10)" style="cursor: default;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="60.12446594238281"></rect><text class="blocklyText" y="12.5" text-anchor="start" x="0">name<tspan style="fill: rgb(165, 91, 128);"> \u25be</tspan></text></g><text class="blocklyText" y="12.5" transform="translate(100.4964828491211,10)">=</text><text class="blocklyText" y="12.5" transform="translate(165.2165756225586,10)">;</text><g class="blocklyDraggable" transform="translate(126.06060791015625,6)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 27.655967712402344 M 27.655967712402344,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: text;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="18.155967712402344"></rect><text class="blocklyText" y="12.5">0</text></g></g></g></svg></p>':
"js"==a?'<pre class="variablesSpec spec">var <i>name</i> = <i>value</i>;</pre>':"")+"<p>名前付き変数に値（通常は数値）を割り当てます。変数の名前は、rangeまたはangleなど、わかりやすい名前にする必要があります。</p>"+("js"==a?"<p>Note that variable names are case-sensitive, thus <code>angle</code> and <code>Angle</code> are two completely different variables.  Variable names must only use the English letters a-z, and numbers. Variable names may not start with a number.</p><p>The <code>var</code> keyword may be omitted on all but the first assignment, but there is no harm in using it.</p>":
"")+"<h3>増分</h3>"+("blocks"==a?'<p><svg height="41" width="250"><g class="blocklyDraggable"><path class="blocklyPathDark" transform="translate(1,1)" fill="#844966" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 40 H 157.48308563232422 v 36 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 133.40868377685547,5 h -30.155967712402344 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 30.155967712402344 z"></path><path class="blocklyPath" fill="#a55b80" d="m 0,8 A 8,8 0 0,1 8,0 H 15 l 6,4 3,0 6,-4 H 40 H 157.48308563232422 v 36 H 29.5 l -6,4 -3,0 -6,-4 H 8 a 8,8 0 0,1 -8,-8 z M 133.40868377685547,5 h -30.155967712402344 v 5 c 0,10 -8,-8 -8,7.5 s 8,-2.5 8,7.5 v 7 h 30.155967712402344 z"></path><path class="blocklyPathLight" stroke="#c08ca6" d="m 0.5,7.5 A 7.5,7.5 0 0,1 8,0.5 H 15 l 6,4 3,0 6,-4 H 39.5 M 39.5,0.5 H 156.98308563232422 M 2.6966991411008934,33.30330085889911 A 7.5,7.5 0 0,1 0.5,28 V 8 M 133.90868377685547,5.5 v 27 h -30.155967712402344 M 98.15271606445313,24.3 l 3.68,-2.1"></path><g class="blocklyEditableText" transform="translate(10,10)" style="cursor: default;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="60.12446594238281"></rect><text class="blocklyText" y="12.5" text-anchor="start" x="0">name<tspan style="fill: rgb(165, 91, 128);"> \u25be</tspan></text></g><text class="blocklyText" y="12.5" transform="translate(70.12446594238281,10)">+=</text><text class="blocklyText" y="12.5" transform="translate(143.40868377685547,10)">;</text><g class="blocklyDraggable" transform="translate(104.25271606445312,6)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#495284" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#5b67a5" d="m 0,0 H 28.155967712402344 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#8c95c0" d="m 0.5,0.5 H 27.655967712402344 M 27.655967712402344,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: text;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="18.155967712402344"></rect><text class="blocklyText" y="12.5">1</text></g></g></g></svg></p>':
"js"==a?'<pre class="variablesSpec spec"><i>name</i> += <i>number</i>;</pre>':"")+"<p>これは、既存の変数に数値を追加するためのショートカットです。次の2行に違いはありません</p><pre>angle += 10;\nvar angle = angle + 10;</pre><p>+=をまだ定義されていない変数には使用しないでください。疑わしい場合は、プログラムの最初で変数を0に割り当てます。</p><h3>値の取得</h3>"+("blocks"==a?'<p><svg height="26" width="250"><g class="blocklyDraggable" transform="translate(8,0)"><path class="blocklyPathDark" transform="translate(1,1)" fill="#844966" d="m 0,0 H 70.12446594238281 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPath" fill="#a55b80" d="m 0,0 H 70.12446594238281 v 25 H 0 V 20 c 0,-10 -8,8 -8,-7.5 s 8,2.5 8,-7.5 z"></path><path class="blocklyPathLight" stroke="#c08ca6" d="m 0.5,0.5 H 69.62446594238281 M 69.62446594238281,0.5 M 0.5,24.5 V 18.5 m -7.36,-0.5 q -1.52,-5.5 0,-11 m 7.36,1 V 0.5 H 1"></path><g class="blocklyEditableText" transform="translate(10,5)" style="cursor: default;"><rect rx="4" ry="4" x="-5" y="0" height="16" width="60.12446594238281"></rect><text class="blocklyText" y="12.5" text-anchor="start" x="0">name<tspan style="fill: rgb(165, 91, 128);"> \u25be</tspan></text></g></g></svg></p>':
"js"==a?'<pre class="variablesSpec spec"><i>name</i></pre>':"")+"<p>以前に名前付き変数に割り当てられていた値（通常は数値）を取得します。</p></div>":"")+(11<=b?'\x3c!-- ---------------------------------------------------------------------- --\x3e<h2 id="functions">関数</h2><div id="functions-content"><p>（未掲載）</p></div>':"");b=document.getElementsByTagName("h2");a=0;for(var c;c=b[a];a++){var d=document.createElement("img");d.src="../common/1x1.gif";c.insertBefore(d,c.firstChild);
c.className="zippy-header-collapsed";document.getElementById(c.id+"-content").className="zippy-content-collapsed";d=u;if(!c)throw TypeError("Element not found: "+c);"string"==typeof c&&(c=document.getElementById(c));c.addEventListener("click",d,!0);c.addEventListener("touchend",d,!0)}});
